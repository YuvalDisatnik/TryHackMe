Basic Pentesting

This is a machine that allows you to practice web app hacking and privilege escalation.

Machine IP address: 
```
10.10.218.161
```
We start our investigation by performing a nmap scan:
```
nmap -A -T4 10.10.218.161
```
in the results we can see that there are multiple ports open, related to different services including:
- `22 - ssh`
- `80 - http`
- `139 & 445 - Samba smbd`
- `8080 - http proxy`

We go and check what is available at the http port via our browser by navigating to:
```
http://10.10.218.161:80
```
or just:
```
10.10.218.161
```
We reach some generic site with two titles. We continue by checking the page's source code, where we find a clue. A comment saying: "Check our dev note section if you need to know what to work on."
Since we don't know what path will lead us to the dev note section, we can try and brute-force some paths using dirbuster.
 We open up the dirbuster GUI with the command:
```
 dirbuster
```
in the dirbuster GUI we enter our target URL:
```
http://10.10.218.161:80
```
and our wordlist of directory names, found in:
```
/usr/share/wordlists
```
 We can see one of the results is a directory called:
```
 /development
```

We go to said directory to find two files:
```
 dev.txt
 j.txt
```
The first one containing information about setting up SMB and Apache.
The second one containing a warning for 'J' to change his weak password because its hash, which is found in /etc/shadow, was easily cracked.

From the webpages we can see that Apache version 2.4.18 (Ubuntu) is being used.

From the txt files we found earlier, we found comments made by two users, "J" and "K", which are probably initials. We will proceed by exploiting the open SMB ports.

We will try and enumerate over possible usernames using the "enum4linux" tool. We execute the following command:
```
enum4linux -a 10.10.218.161
```
Near the end of the results, we see a list of enumerated users. At the end of that list we can see two local users found:
```
jan
kay
```

These username matches the comments we saw earlier. The comments also mentioned that "J" had a weak password. What if "jan" didn't changed her password?

We can try to brute force the password for the username "jan" using the "Hydra" tool, attacking the open SSH port, enumerating over the passwords listed in the "rockyou" list:
```
hydra -l jan -P /usr/share/wordlists/rockyou.txt.gz ssh://10.10.218.161
```
And we get a successful connection attempt using the password "armando".

Now, having a set of valid credentials, we can remote access into the machine using SSH:
```
ssh jan@10.10.218.161
```
and then type the password for "jan": "armando". We've successfully connected as "jan".

We see pretty fast there isn't much we can do as "jan". All reachable directories and files require root privileges, to read/write. To find if there are any vectors for privilege escalation, we will use the "LinEnum" tool.

We first securely copy the script into "jan"'s directory:
```
cp Downloads/LinEnum.sh jan@10.10.218.161:/dev/shm
```
Once we see the file in "jan" directories, we would like to make it an executable:
```
chmod +x LinEnum.sh
```
Now we can run it:
```
./LinEnum.sh
```

We are looking for a way to gain privilege escalation, so one results that pops up is:
```
/home/kay/.ssh/id_rsa
```
which gives us "kay"'s private SSH key, that allows us to login as "kay". We will store the key in a new file for convenience, and SSH to it:
```
ssh -i kay_id_rsa kay@10.10.218.161
```
Oops. We are being requested to enter the passphrase for the SSH key, which we don't have. We will use the "John The Ripper" tool:

First, we will generate a hash for John to understand:
```
/bin/ssh2john THM/Basic\ Pentesting/kay_id_rsa > THM/Basic\ Pentesting/forjohn.txt
```
Now we can run John itself:
```
john THM/Basic\ Pentesting/forjohn.txt
```
and we get a result:
```
beeswax
```
Now, we can login as kay, using SSH, the private SSH key and the passphrase.
Once we have logged in, we can easily find the final password:
```
cat pass.bak
```
and we get:
```
heresareallystrongpasswordthatfollowsthepasswordpolicy$$
```
